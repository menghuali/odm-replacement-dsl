/**
 * generated by Xtext 2.17.0
 */
package poc.rules.ruleLanguage.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import poc.rules.ruleLanguage.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see poc.rules.ruleLanguage.RuleLanguagePackage
 * @generated
 */
public class RuleLanguageSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RuleLanguagePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleLanguageSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = RuleLanguagePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case RuleLanguagePackage.RULE_LANGUAGE:
      {
        RuleLanguage ruleLanguage = (RuleLanguage)theEObject;
        T result = caseRuleLanguage(ruleLanguage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.ELEMENT:
      {
        Element element = (Element)theEObject;
        T result = caseElement(element);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.RULE_PACKAGE:
      {
        RulePackage rulePackage = (RulePackage)theEObject;
        T result = caseRulePackage(rulePackage);
        if (result == null) result = caseElement(rulePackage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.BOOKING_PHRASE:
      {
        BookingPhrase bookingPhrase = (BookingPhrase)theEObject;
        T result = caseBookingPhrase(bookingPhrase);
        if (result == null) result = caseElement(bookingPhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.FLIGHT_PHRASE:
      {
        FlightPhrase flightPhrase = (FlightPhrase)theEObject;
        T result = caseFlightPhrase(flightPhrase);
        if (result == null) result = caseElement(flightPhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.TRIP_PHRASE:
      {
        TripPhrase tripPhrase = (TripPhrase)theEObject;
        T result = caseTripPhrase(tripPhrase);
        if (result == null) result = caseElement(tripPhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.GUEST_PHRASE:
      {
        GuestPhrase guestPhrase = (GuestPhrase)theEObject;
        T result = caseGuestPhrase(guestPhrase);
        if (result == null) result = caseElement(guestPhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.NOTIFICATION_PHRASE:
      {
        NotificationPhrase notificationPhrase = (NotificationPhrase)theEObject;
        T result = caseNotificationPhrase(notificationPhrase);
        if (result == null) result = caseElement(notificationPhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.NOTIFICATION_ACTION:
      {
        NotificationAction notificationAction = (NotificationAction)theEObject;
        T result = caseNotificationAction(notificationAction);
        if (result == null) result = caseElement(notificationAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.FLIGHT_ACTION:
      {
        FlightAction flightAction = (FlightAction)theEObject;
        T result = caseFlightAction(flightAction);
        if (result == null) result = caseElement(flightAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.BOOKING_ACTION:
      {
        BookingAction bookingAction = (BookingAction)theEObject;
        T result = caseBookingAction(bookingAction);
        if (result == null) result = caseElement(bookingAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.GUEST_ACTION:
      {
        GuestAction guestAction = (GuestAction)theEObject;
        T result = caseGuestAction(guestAction);
        if (result == null) result = caseElement(guestAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.TRIP_ACTION:
      {
        TripAction tripAction = (TripAction)theEObject;
        T result = caseTripAction(tripAction);
        if (result == null) result = caseElement(tripAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.RULE:
      {
        Rule rule = (Rule)theEObject;
        T result = caseRule(rule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.ECONDITION:
      {
        ECondition eCondition = (ECondition)theEObject;
        T result = caseECondition(eCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.CONDITION:
      {
        Condition condition = (Condition)theEObject;
        T result = caseCondition(condition);
        if (result == null) result = caseECondition(condition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.SIMPLE_CONDITION:
      {
        SimpleCondition simpleCondition = (SimpleCondition)theEObject;
        T result = caseSimpleCondition(simpleCondition);
        if (result == null) result = caseCondition(simpleCondition);
        if (result == null) result = caseECondition(simpleCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.TRIP_CONDITION:
      {
        TripCondition tripCondition = (TripCondition)theEObject;
        T result = caseTripCondition(tripCondition);
        if (result == null) result = caseSimpleCondition(tripCondition);
        if (result == null) result = caseCondition(tripCondition);
        if (result == null) result = caseECondition(tripCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.GUEST_CONDITION:
      {
        GuestCondition guestCondition = (GuestCondition)theEObject;
        T result = caseGuestCondition(guestCondition);
        if (result == null) result = caseSimpleCondition(guestCondition);
        if (result == null) result = caseCondition(guestCondition);
        if (result == null) result = caseECondition(guestCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.BOOKING_CONDITION:
      {
        BookingCondition bookingCondition = (BookingCondition)theEObject;
        T result = caseBookingCondition(bookingCondition);
        if (result == null) result = caseSimpleCondition(bookingCondition);
        if (result == null) result = caseCondition(bookingCondition);
        if (result == null) result = caseECondition(bookingCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.FLIGHT_CONDITION:
      {
        FlightCondition flightCondition = (FlightCondition)theEObject;
        T result = caseFlightCondition(flightCondition);
        if (result == null) result = caseSimpleCondition(flightCondition);
        if (result == null) result = caseCondition(flightCondition);
        if (result == null) result = caseECondition(flightCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.NOTIFICATION_CONDITION:
      {
        NotificationCondition notificationCondition = (NotificationCondition)theEObject;
        T result = caseNotificationCondition(notificationCondition);
        if (result == null) result = caseSimpleCondition(notificationCondition);
        if (result == null) result = caseCondition(notificationCondition);
        if (result == null) result = caseECondition(notificationCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = caseElement(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.ENOTIFICATION_ACTION:
      {
        ENotificationAction eNotificationAction = (ENotificationAction)theEObject;
        T result = caseENotificationAction(eNotificationAction);
        if (result == null) result = caseAction(eNotificationAction);
        if (result == null) result = caseElement(eNotificationAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.EFLIGHT_ACTION:
      {
        EFlightAction eFlightAction = (EFlightAction)theEObject;
        T result = caseEFlightAction(eFlightAction);
        if (result == null) result = caseAction(eFlightAction);
        if (result == null) result = caseElement(eFlightAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.EBOOKING_ACTION:
      {
        EBookingAction eBookingAction = (EBookingAction)theEObject;
        T result = caseEBookingAction(eBookingAction);
        if (result == null) result = caseAction(eBookingAction);
        if (result == null) result = caseElement(eBookingAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.EGUEST_ACTION:
      {
        EGuestAction eGuestAction = (EGuestAction)theEObject;
        T result = caseEGuestAction(eGuestAction);
        if (result == null) result = caseAction(eGuestAction);
        if (result == null) result = caseElement(eGuestAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.ETRIP_ACTION:
      {
        ETripAction eTripAction = (ETripAction)theEObject;
        T result = caseETripAction(eTripAction);
        if (result == null) result = caseAction(eTripAction);
        if (result == null) result = caseElement(eTripAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RuleLanguagePackage.DECISION_TABLE:
      {
        DecisionTable decisionTable = (DecisionTable)theEObject;
        T result = caseDecisionTable(decisionTable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule Language</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule Language</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRuleLanguage(RuleLanguage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElement(Element object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule Package</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule Package</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRulePackage(RulePackage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Booking Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Booking Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBookingPhrase(BookingPhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Flight Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Flight Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFlightPhrase(FlightPhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trip Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trip Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTripPhrase(TripPhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Guest Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Guest Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGuestPhrase(GuestPhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Notification Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Notification Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNotificationPhrase(NotificationPhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Notification Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Notification Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNotificationAction(NotificationAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Flight Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Flight Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFlightAction(FlightAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Booking Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Booking Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBookingAction(BookingAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Guest Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Guest Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGuestAction(GuestAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trip Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trip Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTripAction(TripAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRule(Rule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ECondition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ECondition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseECondition(ECondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCondition(Condition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Simple Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Simple Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSimpleCondition(SimpleCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Trip Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Trip Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTripCondition(TripCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Guest Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Guest Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGuestCondition(GuestCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Booking Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Booking Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBookingCondition(BookingCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Flight Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Flight Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFlightCondition(FlightCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Notification Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Notification Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNotificationCondition(NotificationCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENotification Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENotification Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENotificationAction(ENotificationAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFlight Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFlight Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFlightAction(EFlightAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBooking Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBooking Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBookingAction(EBookingAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EGuest Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EGuest Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEGuestAction(EGuestAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETrip Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETrip Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETripAction(ETripAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Decision Table</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Decision Table</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDecisionTable(DecisionTable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //RuleLanguageSwitch
