/**
 * generated by Xtext 2.17.0
 */
package poc.rules.ruleLanguage.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import poc.rules.ruleLanguage.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RuleLanguageFactoryImpl extends EFactoryImpl implements RuleLanguageFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static RuleLanguageFactory init()
  {
    try
    {
      RuleLanguageFactory theRuleLanguageFactory = (RuleLanguageFactory)EPackage.Registry.INSTANCE.getEFactory(RuleLanguagePackage.eNS_URI);
      if (theRuleLanguageFactory != null)
      {
        return theRuleLanguageFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new RuleLanguageFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleLanguageFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case RuleLanguagePackage.RULE_LANGUAGE: return createRuleLanguage();
      case RuleLanguagePackage.ELEMENT: return createElement();
      case RuleLanguagePackage.RULE_PACKAGE: return createRulePackage();
      case RuleLanguagePackage.BOOKING_PHRASE: return createBookingPhrase();
      case RuleLanguagePackage.FLIGHT_PHRASE: return createFlightPhrase();
      case RuleLanguagePackage.TRIP_PHRASE: return createTripPhrase();
      case RuleLanguagePackage.GUEST_PHRASE: return createGuestPhrase();
      case RuleLanguagePackage.NOTIFICATION_PHRASE: return createNotificationPhrase();
      case RuleLanguagePackage.NOTIFICATION_ACTION: return createNotificationAction();
      case RuleLanguagePackage.FLIGHT_ACTION: return createFlightAction();
      case RuleLanguagePackage.BOOKING_ACTION: return createBookingAction();
      case RuleLanguagePackage.GUEST_ACTION: return createGuestAction();
      case RuleLanguagePackage.TRIP_ACTION: return createTripAction();
      case RuleLanguagePackage.RULE: return createRule();
      case RuleLanguagePackage.ECONDITION: return createECondition();
      case RuleLanguagePackage.CONDITION: return createCondition();
      case RuleLanguagePackage.SIMPLE_CONDITION: return createSimpleCondition();
      case RuleLanguagePackage.TRIP_CONDITION: return createTripCondition();
      case RuleLanguagePackage.GUEST_CONDITION: return createGuestCondition();
      case RuleLanguagePackage.BOOKING_CONDITION: return createBookingCondition();
      case RuleLanguagePackage.FLIGHT_CONDITION: return createFlightCondition();
      case RuleLanguagePackage.NOTIFICATION_CONDITION: return createNotificationCondition();
      case RuleLanguagePackage.ACTION: return createAction();
      case RuleLanguagePackage.ENOTIFICATION_ACTION: return createENotificationAction();
      case RuleLanguagePackage.EFLIGHT_ACTION: return createEFlightAction();
      case RuleLanguagePackage.EBOOKING_ACTION: return createEBookingAction();
      case RuleLanguagePackage.EGUEST_ACTION: return createEGuestAction();
      case RuleLanguagePackage.ETRIP_ACTION: return createETripAction();
      case RuleLanguagePackage.DECISION_TABLE: return createDecisionTable();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RuleLanguage createRuleLanguage()
  {
    RuleLanguageImpl ruleLanguage = new RuleLanguageImpl();
    return ruleLanguage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RulePackage createRulePackage()
  {
    RulePackageImpl rulePackage = new RulePackageImpl();
    return rulePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BookingPhrase createBookingPhrase()
  {
    BookingPhraseImpl bookingPhrase = new BookingPhraseImpl();
    return bookingPhrase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FlightPhrase createFlightPhrase()
  {
    FlightPhraseImpl flightPhrase = new FlightPhraseImpl();
    return flightPhrase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TripPhrase createTripPhrase()
  {
    TripPhraseImpl tripPhrase = new TripPhraseImpl();
    return tripPhrase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GuestPhrase createGuestPhrase()
  {
    GuestPhraseImpl guestPhrase = new GuestPhraseImpl();
    return guestPhrase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationPhrase createNotificationPhrase()
  {
    NotificationPhraseImpl notificationPhrase = new NotificationPhraseImpl();
    return notificationPhrase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationAction createNotificationAction()
  {
    NotificationActionImpl notificationAction = new NotificationActionImpl();
    return notificationAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FlightAction createFlightAction()
  {
    FlightActionImpl flightAction = new FlightActionImpl();
    return flightAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BookingAction createBookingAction()
  {
    BookingActionImpl bookingAction = new BookingActionImpl();
    return bookingAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GuestAction createGuestAction()
  {
    GuestActionImpl guestAction = new GuestActionImpl();
    return guestAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TripAction createTripAction()
  {
    TripActionImpl tripAction = new TripActionImpl();
    return tripAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rule createRule()
  {
    RuleImpl rule = new RuleImpl();
    return rule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ECondition createECondition()
  {
    EConditionImpl eCondition = new EConditionImpl();
    return eCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleCondition createSimpleCondition()
  {
    SimpleConditionImpl simpleCondition = new SimpleConditionImpl();
    return simpleCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TripCondition createTripCondition()
  {
    TripConditionImpl tripCondition = new TripConditionImpl();
    return tripCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GuestCondition createGuestCondition()
  {
    GuestConditionImpl guestCondition = new GuestConditionImpl();
    return guestCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BookingCondition createBookingCondition()
  {
    BookingConditionImpl bookingCondition = new BookingConditionImpl();
    return bookingCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FlightCondition createFlightCondition()
  {
    FlightConditionImpl flightCondition = new FlightConditionImpl();
    return flightCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationCondition createNotificationCondition()
  {
    NotificationConditionImpl notificationCondition = new NotificationConditionImpl();
    return notificationCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ENotificationAction createENotificationAction()
  {
    ENotificationActionImpl eNotificationAction = new ENotificationActionImpl();
    return eNotificationAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EFlightAction createEFlightAction()
  {
    EFlightActionImpl eFlightAction = new EFlightActionImpl();
    return eFlightAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBookingAction createEBookingAction()
  {
    EBookingActionImpl eBookingAction = new EBookingActionImpl();
    return eBookingAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EGuestAction createEGuestAction()
  {
    EGuestActionImpl eGuestAction = new EGuestActionImpl();
    return eGuestAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ETripAction createETripAction()
  {
    ETripActionImpl eTripAction = new ETripActionImpl();
    return eTripAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DecisionTable createDecisionTable()
  {
    DecisionTableImpl decisionTable = new DecisionTableImpl();
    return decisionTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RuleLanguagePackage getRuleLanguagePackage()
  {
    return (RuleLanguagePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static RuleLanguagePackage getPackage()
  {
    return RuleLanguagePackage.eINSTANCE;
  }

} //RuleLanguageFactoryImpl
