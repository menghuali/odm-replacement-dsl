/**
 * generated by Xtext 2.17.0
 */
package poc.rules.ruleLanguage.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import poc.rules.ruleLanguage.Action;
import poc.rules.ruleLanguage.BookingAction;
import poc.rules.ruleLanguage.BookingCondition;
import poc.rules.ruleLanguage.BookingPhrase;
import poc.rules.ruleLanguage.Condition;
import poc.rules.ruleLanguage.DecisionTable;
import poc.rules.ruleLanguage.EBookingAction;
import poc.rules.ruleLanguage.ECondition;
import poc.rules.ruleLanguage.EFlightAction;
import poc.rules.ruleLanguage.EGuestAction;
import poc.rules.ruleLanguage.ENotificationAction;
import poc.rules.ruleLanguage.ETripAction;
import poc.rules.ruleLanguage.Element;
import poc.rules.ruleLanguage.FlightAction;
import poc.rules.ruleLanguage.FlightCondition;
import poc.rules.ruleLanguage.FlightPhrase;
import poc.rules.ruleLanguage.GuestAction;
import poc.rules.ruleLanguage.GuestCondition;
import poc.rules.ruleLanguage.GuestPhrase;
import poc.rules.ruleLanguage.NotificationAction;
import poc.rules.ruleLanguage.NotificationCondition;
import poc.rules.ruleLanguage.NotificationPhrase;
import poc.rules.ruleLanguage.Rule;
import poc.rules.ruleLanguage.RuleLanguage;
import poc.rules.ruleLanguage.RuleLanguageFactory;
import poc.rules.ruleLanguage.RuleLanguagePackage;
import poc.rules.ruleLanguage.RulePackage;
import poc.rules.ruleLanguage.SimpleCondition;
import poc.rules.ruleLanguage.TripAction;
import poc.rules.ruleLanguage.TripCondition;
import poc.rules.ruleLanguage.TripPhrase;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RuleLanguagePackageImpl extends EPackageImpl implements RuleLanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleLanguageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rulePackageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bookingPhraseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass flightPhraseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tripPhraseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass guestPhraseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notificationPhraseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notificationActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass flightActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bookingActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass guestActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tripActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tripConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass guestConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bookingConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass flightConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notificationConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eNotificationActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eFlightActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eBookingActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eGuestActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eTripActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass decisionTableEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see poc.rules.ruleLanguage.RuleLanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private RuleLanguagePackageImpl()
  {
    super(eNS_URI, RuleLanguageFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link RuleLanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static RuleLanguagePackage init()
  {
    if (isInited) return (RuleLanguagePackage)EPackage.Registry.INSTANCE.getEPackage(RuleLanguagePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredRuleLanguagePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    RuleLanguagePackageImpl theRuleLanguagePackage = registeredRuleLanguagePackage instanceof RuleLanguagePackageImpl ? (RuleLanguagePackageImpl)registeredRuleLanguagePackage : new RuleLanguagePackageImpl();

    isInited = true;

    // Create package meta-data objects
    theRuleLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theRuleLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theRuleLanguagePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(RuleLanguagePackage.eNS_URI, theRuleLanguagePackage);
    return theRuleLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleLanguage()
  {
    return ruleLanguageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleLanguage_Elements()
  {
    return (EReference)ruleLanguageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElement()
  {
    return elementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRulePackage()
  {
    return rulePackageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRulePackage_Name()
  {
    return (EAttribute)rulePackageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRulePackage_Elements()
  {
    return (EReference)rulePackageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBookingPhrase()
  {
    return bookingPhraseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBookingPhrase_Name()
  {
    return (EAttribute)bookingPhraseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFlightPhrase()
  {
    return flightPhraseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFlightPhrase_Name()
  {
    return (EAttribute)flightPhraseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTripPhrase()
  {
    return tripPhraseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTripPhrase_Name()
  {
    return (EAttribute)tripPhraseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGuestPhrase()
  {
    return guestPhraseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGuestPhrase_Name()
  {
    return (EAttribute)guestPhraseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNotificationPhrase()
  {
    return notificationPhraseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNotificationPhrase_Name()
  {
    return (EAttribute)notificationPhraseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNotificationAction()
  {
    return notificationActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNotificationAction_Name()
  {
    return (EAttribute)notificationActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFlightAction()
  {
    return flightActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFlightAction_Name()
  {
    return (EAttribute)flightActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBookingAction()
  {
    return bookingActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBookingAction_Name()
  {
    return (EAttribute)bookingActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGuestAction()
  {
    return guestActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGuestAction_Name()
  {
    return (EAttribute)guestActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTripAction()
  {
    return tripActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTripAction_Name()
  {
    return (EAttribute)tripActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRule()
  {
    return ruleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRule_Name()
  {
    return (EAttribute)ruleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRule_Description()
  {
    return (EAttribute)ruleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRule_Conditions()
  {
    return (EReference)ruleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRule_Actions()
  {
    return (EReference)ruleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getECondition()
  {
    return eConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleCondition()
  {
    return simpleConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTripCondition()
  {
    return tripConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTripCondition_Method()
  {
    return (EReference)tripConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGuestCondition()
  {
    return guestConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGuestCondition_Method()
  {
    return (EReference)guestConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBookingCondition()
  {
    return bookingConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBookingCondition_Method()
  {
    return (EReference)bookingConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFlightCondition()
  {
    return flightConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFlightCondition_Method()
  {
    return (EReference)flightConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNotificationCondition()
  {
    return notificationConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNotificationCondition_Method()
  {
    return (EReference)notificationConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAction()
  {
    return actionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAction_Param()
  {
    return (EAttribute)actionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getENotificationAction()
  {
    return eNotificationActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getENotificationAction_Method()
  {
    return (EReference)eNotificationActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEFlightAction()
  {
    return eFlightActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEFlightAction_Method()
  {
    return (EReference)eFlightActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEBookingAction()
  {
    return eBookingActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEBookingAction_Method()
  {
    return (EReference)eBookingActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEGuestAction()
  {
    return eGuestActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEGuestAction_Method()
  {
    return (EReference)eGuestActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getETripAction()
  {
    return eTripActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getETripAction_Method()
  {
    return (EReference)eTripActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDecisionTable()
  {
    return decisionTableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionTable_Name()
  {
    return (EAttribute)decisionTableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionTable_Description()
  {
    return (EAttribute)decisionTableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDecisionTable_Conditions()
  {
    return (EReference)decisionTableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDecisionTable_Actions()
  {
    return (EReference)decisionTableEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionTable_Cells()
  {
    return (EAttribute)decisionTableEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RuleLanguageFactory getRuleLanguageFactory()
  {
    return (RuleLanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    ruleLanguageEClass = createEClass(RULE_LANGUAGE);
    createEReference(ruleLanguageEClass, RULE_LANGUAGE__ELEMENTS);

    elementEClass = createEClass(ELEMENT);

    rulePackageEClass = createEClass(RULE_PACKAGE);
    createEAttribute(rulePackageEClass, RULE_PACKAGE__NAME);
    createEReference(rulePackageEClass, RULE_PACKAGE__ELEMENTS);

    bookingPhraseEClass = createEClass(BOOKING_PHRASE);
    createEAttribute(bookingPhraseEClass, BOOKING_PHRASE__NAME);

    flightPhraseEClass = createEClass(FLIGHT_PHRASE);
    createEAttribute(flightPhraseEClass, FLIGHT_PHRASE__NAME);

    tripPhraseEClass = createEClass(TRIP_PHRASE);
    createEAttribute(tripPhraseEClass, TRIP_PHRASE__NAME);

    guestPhraseEClass = createEClass(GUEST_PHRASE);
    createEAttribute(guestPhraseEClass, GUEST_PHRASE__NAME);

    notificationPhraseEClass = createEClass(NOTIFICATION_PHRASE);
    createEAttribute(notificationPhraseEClass, NOTIFICATION_PHRASE__NAME);

    notificationActionEClass = createEClass(NOTIFICATION_ACTION);
    createEAttribute(notificationActionEClass, NOTIFICATION_ACTION__NAME);

    flightActionEClass = createEClass(FLIGHT_ACTION);
    createEAttribute(flightActionEClass, FLIGHT_ACTION__NAME);

    bookingActionEClass = createEClass(BOOKING_ACTION);
    createEAttribute(bookingActionEClass, BOOKING_ACTION__NAME);

    guestActionEClass = createEClass(GUEST_ACTION);
    createEAttribute(guestActionEClass, GUEST_ACTION__NAME);

    tripActionEClass = createEClass(TRIP_ACTION);
    createEAttribute(tripActionEClass, TRIP_ACTION__NAME);

    ruleEClass = createEClass(RULE);
    createEAttribute(ruleEClass, RULE__NAME);
    createEAttribute(ruleEClass, RULE__DESCRIPTION);
    createEReference(ruleEClass, RULE__CONDITIONS);
    createEReference(ruleEClass, RULE__ACTIONS);

    eConditionEClass = createEClass(ECONDITION);

    conditionEClass = createEClass(CONDITION);

    simpleConditionEClass = createEClass(SIMPLE_CONDITION);

    tripConditionEClass = createEClass(TRIP_CONDITION);
    createEReference(tripConditionEClass, TRIP_CONDITION__METHOD);

    guestConditionEClass = createEClass(GUEST_CONDITION);
    createEReference(guestConditionEClass, GUEST_CONDITION__METHOD);

    bookingConditionEClass = createEClass(BOOKING_CONDITION);
    createEReference(bookingConditionEClass, BOOKING_CONDITION__METHOD);

    flightConditionEClass = createEClass(FLIGHT_CONDITION);
    createEReference(flightConditionEClass, FLIGHT_CONDITION__METHOD);

    notificationConditionEClass = createEClass(NOTIFICATION_CONDITION);
    createEReference(notificationConditionEClass, NOTIFICATION_CONDITION__METHOD);

    actionEClass = createEClass(ACTION);
    createEAttribute(actionEClass, ACTION__PARAM);

    eNotificationActionEClass = createEClass(ENOTIFICATION_ACTION);
    createEReference(eNotificationActionEClass, ENOTIFICATION_ACTION__METHOD);

    eFlightActionEClass = createEClass(EFLIGHT_ACTION);
    createEReference(eFlightActionEClass, EFLIGHT_ACTION__METHOD);

    eBookingActionEClass = createEClass(EBOOKING_ACTION);
    createEReference(eBookingActionEClass, EBOOKING_ACTION__METHOD);

    eGuestActionEClass = createEClass(EGUEST_ACTION);
    createEReference(eGuestActionEClass, EGUEST_ACTION__METHOD);

    eTripActionEClass = createEClass(ETRIP_ACTION);
    createEReference(eTripActionEClass, ETRIP_ACTION__METHOD);

    decisionTableEClass = createEClass(DECISION_TABLE);
    createEAttribute(decisionTableEClass, DECISION_TABLE__NAME);
    createEAttribute(decisionTableEClass, DECISION_TABLE__DESCRIPTION);
    createEReference(decisionTableEClass, DECISION_TABLE__CONDITIONS);
    createEReference(decisionTableEClass, DECISION_TABLE__ACTIONS);
    createEAttribute(decisionTableEClass, DECISION_TABLE__CELLS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    rulePackageEClass.getESuperTypes().add(this.getElement());
    bookingPhraseEClass.getESuperTypes().add(this.getElement());
    flightPhraseEClass.getESuperTypes().add(this.getElement());
    tripPhraseEClass.getESuperTypes().add(this.getElement());
    guestPhraseEClass.getESuperTypes().add(this.getElement());
    notificationPhraseEClass.getESuperTypes().add(this.getElement());
    notificationActionEClass.getESuperTypes().add(this.getElement());
    flightActionEClass.getESuperTypes().add(this.getElement());
    bookingActionEClass.getESuperTypes().add(this.getElement());
    guestActionEClass.getESuperTypes().add(this.getElement());
    tripActionEClass.getESuperTypes().add(this.getElement());
    conditionEClass.getESuperTypes().add(this.getECondition());
    simpleConditionEClass.getESuperTypes().add(this.getCondition());
    tripConditionEClass.getESuperTypes().add(this.getSimpleCondition());
    guestConditionEClass.getESuperTypes().add(this.getSimpleCondition());
    bookingConditionEClass.getESuperTypes().add(this.getSimpleCondition());
    flightConditionEClass.getESuperTypes().add(this.getSimpleCondition());
    notificationConditionEClass.getESuperTypes().add(this.getSimpleCondition());
    actionEClass.getESuperTypes().add(this.getElement());
    eNotificationActionEClass.getESuperTypes().add(this.getAction());
    eFlightActionEClass.getESuperTypes().add(this.getAction());
    eBookingActionEClass.getESuperTypes().add(this.getAction());
    eGuestActionEClass.getESuperTypes().add(this.getAction());
    eTripActionEClass.getESuperTypes().add(this.getAction());

    // Initialize classes and features; add operations and parameters
    initEClass(ruleLanguageEClass, RuleLanguage.class, "RuleLanguage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRuleLanguage_Elements(), this.getElement(), null, "elements", null, 0, -1, RuleLanguage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementEClass, Element.class, "Element", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rulePackageEClass, RulePackage.class, "RulePackage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRulePackage_Name(), ecorePackage.getEString(), "name", null, 0, 1, RulePackage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRulePackage_Elements(), ecorePackage.getEObject(), null, "elements", null, 0, -1, RulePackage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bookingPhraseEClass, BookingPhrase.class, "BookingPhrase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBookingPhrase_Name(), ecorePackage.getEString(), "name", null, 0, 1, BookingPhrase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(flightPhraseEClass, FlightPhrase.class, "FlightPhrase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFlightPhrase_Name(), ecorePackage.getEString(), "name", null, 0, 1, FlightPhrase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tripPhraseEClass, TripPhrase.class, "TripPhrase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTripPhrase_Name(), ecorePackage.getEString(), "name", null, 0, 1, TripPhrase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(guestPhraseEClass, GuestPhrase.class, "GuestPhrase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGuestPhrase_Name(), ecorePackage.getEString(), "name", null, 0, 1, GuestPhrase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(notificationPhraseEClass, NotificationPhrase.class, "NotificationPhrase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNotificationPhrase_Name(), ecorePackage.getEString(), "name", null, 0, 1, NotificationPhrase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(notificationActionEClass, NotificationAction.class, "NotificationAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNotificationAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, NotificationAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(flightActionEClass, FlightAction.class, "FlightAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFlightAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, FlightAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bookingActionEClass, BookingAction.class, "BookingAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBookingAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, BookingAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(guestActionEClass, GuestAction.class, "GuestAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGuestAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, GuestAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tripActionEClass, TripAction.class, "TripAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTripAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, TripAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleEClass, Rule.class, "Rule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRule_Name(), ecorePackage.getEString(), "name", null, 0, 1, Rule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRule_Description(), ecorePackage.getEString(), "description", null, 0, 1, Rule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRule_Conditions(), this.getECondition(), null, "conditions", null, 0, -1, Rule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRule_Actions(), this.getAction(), null, "actions", null, 0, -1, Rule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eConditionEClass, ECondition.class, "ECondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(simpleConditionEClass, SimpleCondition.class, "SimpleCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tripConditionEClass, TripCondition.class, "TripCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTripCondition_Method(), this.getTripPhrase(), null, "method", null, 0, -1, TripCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(guestConditionEClass, GuestCondition.class, "GuestCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGuestCondition_Method(), this.getGuestPhrase(), null, "method", null, 0, -1, GuestCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bookingConditionEClass, BookingCondition.class, "BookingCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBookingCondition_Method(), this.getBookingPhrase(), null, "method", null, 0, -1, BookingCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(flightConditionEClass, FlightCondition.class, "FlightCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFlightCondition_Method(), this.getFlightPhrase(), null, "method", null, 0, -1, FlightCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(notificationConditionEClass, NotificationCondition.class, "NotificationCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNotificationCondition_Method(), this.getNotificationPhrase(), null, "method", null, 0, -1, NotificationCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actionEClass, Action.class, "Action", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAction_Param(), ecorePackage.getEString(), "param", null, 0, -1, Action.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eNotificationActionEClass, ENotificationAction.class, "ENotificationAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getENotificationAction_Method(), this.getNotificationAction(), null, "method", null, 0, -1, ENotificationAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eFlightActionEClass, EFlightAction.class, "EFlightAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEFlightAction_Method(), this.getFlightAction(), null, "method", null, 0, -1, EFlightAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eBookingActionEClass, EBookingAction.class, "EBookingAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEBookingAction_Method(), this.getBookingAction(), null, "method", null, 0, -1, EBookingAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eGuestActionEClass, EGuestAction.class, "EGuestAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEGuestAction_Method(), this.getGuestAction(), null, "method", null, 0, -1, EGuestAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eTripActionEClass, ETripAction.class, "ETripAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getETripAction_Method(), this.getTripAction(), null, "method", null, 0, -1, ETripAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(decisionTableEClass, DecisionTable.class, "DecisionTable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDecisionTable_Name(), ecorePackage.getEString(), "name", null, 0, 1, DecisionTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionTable_Description(), ecorePackage.getEString(), "description", null, 0, 1, DecisionTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDecisionTable_Conditions(), this.getSimpleCondition(), null, "conditions", null, 0, -1, DecisionTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDecisionTable_Actions(), this.getAction(), null, "actions", null, 0, -1, DecisionTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionTable_Cells(), ecorePackage.getEString(), "cells", null, 0, -1, DecisionTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //RuleLanguagePackageImpl
