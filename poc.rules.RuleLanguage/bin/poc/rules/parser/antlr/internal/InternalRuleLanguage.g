/*
 * generated by Xtext 2.17.0
 */
grammar InternalRuleLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package poc.rules.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package poc.rules.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import poc.rules.services.RuleLanguageGrammarAccess;

}

@parser::members {

 	private RuleLanguageGrammarAccess grammarAccess;

    public InternalRuleLanguageParser(TokenStream input, RuleLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RuleLanguage";
   	}

   	@Override
   	protected RuleLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRuleLanguage
entryRuleRuleLanguage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleLanguageRule()); }
	iv_ruleRuleLanguage=ruleRuleLanguage
	{ $current=$iv_ruleRuleLanguage.current; }
	EOF;

// Rule RuleLanguage
ruleRuleLanguage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRuleLanguageAccess().getElementsElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRuleLanguageRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"poc.rules.RuleLanguage.Element");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getBookingPhraseParserRuleCall_0());
		}
		this_BookingPhrase_0=ruleBookingPhrase
		{
			$current = $this_BookingPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getFlightPhraseParserRuleCall_1());
		}
		this_FlightPhrase_1=ruleFlightPhrase
		{
			$current = $this_FlightPhrase_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getTripPhraseParserRuleCall_2());
		}
		this_TripPhrase_2=ruleTripPhrase
		{
			$current = $this_TripPhrase_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getGuestPhraseParserRuleCall_3());
		}
		this_GuestPhrase_3=ruleGuestPhrase
		{
			$current = $this_GuestPhrase_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getNotificationPhraseParserRuleCall_4());
		}
		this_NotificationPhrase_4=ruleNotificationPhrase
		{
			$current = $this_NotificationPhrase_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getActionParserRuleCall_5());
		}
		this_Action_5=ruleAction
		{
			$current = $this_Action_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getNotificationActionParserRuleCall_6());
		}
		this_NotificationAction_6=ruleNotificationAction
		{
			$current = $this_NotificationAction_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getFlightActionParserRuleCall_7());
		}
		this_FlightAction_7=ruleFlightAction
		{
			$current = $this_FlightAction_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getBookingActionParserRuleCall_8());
		}
		this_BookingAction_8=ruleBookingAction
		{
			$current = $this_BookingAction_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getGuestActionParserRuleCall_9());
		}
		this_GuestAction_9=ruleGuestAction
		{
			$current = $this_GuestAction_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getTripActionParserRuleCall_10());
		}
		this_TripAction_10=ruleTripAction
		{
			$current = $this_TripAction_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getRulePackageParserRuleCall_11());
		}
		this_RulePackage_11=ruleRulePackage
		{
			$current = $this_RulePackage_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRulePackage
entryRuleRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRulePackageRule()); }
	iv_ruleRulePackage=ruleRulePackage
	{ $current=$iv_ruleRulePackage.current; }
	EOF;

// Rule RulePackage
ruleRulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getRulePackageAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRulePackageAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulePackageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"poc.rules.RuleLanguage.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRulePackageAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRulePackageAccess().getElementsRuleParserRuleCall_3_0_0());
					}
					lv_elements_3_1=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRulePackageRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_1,
							"poc.rules.RuleLanguage.Rule");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getRulePackageAccess().getElementsDecisionTableParserRuleCall_3_0_1());
					}
					lv_elements_3_2=ruleDecisionTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRulePackageRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_2,
							"poc.rules.RuleLanguage.DecisionTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRulePackageAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleBookingPhrase
entryRuleBookingPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBookingPhraseRule()); }
	iv_ruleBookingPhrase=ruleBookingPhrase
	{ $current=$iv_ruleBookingPhrase.current; }
	EOF;

// Rule BookingPhrase
ruleBookingPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$booking'
		{
			newLeafNode(otherlv_0, grammarAccess.getBookingPhraseAccess().getBookingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBookingPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBookingPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFlightPhrase
entryRuleFlightPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlightPhraseRule()); }
	iv_ruleFlightPhrase=ruleFlightPhrase
	{ $current=$iv_ruleFlightPhrase.current; }
	EOF;

// Rule FlightPhrase
ruleFlightPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$flight'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlightPhraseAccess().getFlightKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFlightPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTripPhrase
entryRuleTripPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTripPhraseRule()); }
	iv_ruleTripPhrase=ruleTripPhrase
	{ $current=$iv_ruleTripPhrase.current; }
	EOF;

// Rule TripPhrase
ruleTripPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$trip'
		{
			newLeafNode(otherlv_0, grammarAccess.getTripPhraseAccess().getTripKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTripPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTripPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGuestPhrase
entryRuleGuestPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuestPhraseRule()); }
	iv_ruleGuestPhrase=ruleGuestPhrase
	{ $current=$iv_ruleGuestPhrase.current; }
	EOF;

// Rule GuestPhrase
ruleGuestPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$guest'
		{
			newLeafNode(otherlv_0, grammarAccess.getGuestPhraseAccess().getGuestKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGuestPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuestPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleNotificationPhrase
entryRuleNotificationPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotificationPhraseRule()); }
	iv_ruleNotificationPhrase=ruleNotificationPhrase
	{ $current=$iv_ruleNotificationPhrase.current; }
	EOF;

// Rule NotificationPhrase
ruleNotificationPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$notification'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotificationPhraseAccess().getNotificationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNotificationPhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNotificationPhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleNotificationAction
entryRuleNotificationAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotificationActionRule()); }
	iv_ruleNotificationAction=ruleNotificationAction
	{ $current=$iv_ruleNotificationAction.current; }
	EOF;

// Rule NotificationAction
ruleNotificationAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#notification'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotificationActionAccess().getNotificationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNotificationActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNotificationActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFlightAction
entryRuleFlightAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlightActionRule()); }
	iv_ruleFlightAction=ruleFlightAction
	{ $current=$iv_ruleFlightAction.current; }
	EOF;

// Rule FlightAction
ruleFlightAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#flight'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlightActionAccess().getFlightKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFlightActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBookingAction
entryRuleBookingAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBookingActionRule()); }
	iv_ruleBookingAction=ruleBookingAction
	{ $current=$iv_ruleBookingAction.current; }
	EOF;

// Rule BookingAction
ruleBookingAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#booking'
		{
			newLeafNode(otherlv_0, grammarAccess.getBookingActionAccess().getBookingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBookingActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBookingActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGuestAction
entryRuleGuestAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuestActionRule()); }
	iv_ruleGuestAction=ruleGuestAction
	{ $current=$iv_ruleGuestAction.current; }
	EOF;

// Rule GuestAction
ruleGuestAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#guest'
		{
			newLeafNode(otherlv_0, grammarAccess.getGuestActionAccess().getGuestKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGuestActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuestActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTripAction
entryRuleTripAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTripActionRule()); }
	iv_ruleTripAction=ruleTripAction
	{ $current=$iv_ruleTripAction.current; }
	EOF;

// Rule TripAction
ruleTripAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#trip'
		{
			newLeafNode(otherlv_0, grammarAccess.getTripActionAccess().getTripKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTripActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTripActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getColonKeyword_2_0());
			}
			(
				(
					lv_description_3_0=RULE_STRING
					{
						newLeafNode(lv_description_3_0, grammarAccess.getRuleAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_4='When'
			{
				newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getWhenKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getConditionsEConditionParserRuleCall_3_1_0());
					}
					lv_conditions_5_0=ruleECondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_5_0,
							"poc.rules.RuleLanguage.ECondition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_6='Then'
		{
			newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getThenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getActionsActionParserRuleCall_5_0());
				}
				lv_actions_7_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"actions",
						lv_actions_7_0,
						"poc.rules.RuleLanguage.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_8='Else'
			{
				newLeafNode(otherlv_8, grammarAccess.getRuleAccess().getElseKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getActionsActionParserRuleCall_6_1_0());
					}
					lv_actions_9_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"actions",
							lv_actions_9_0,
							"poc.rules.RuleLanguage.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleECondition
entryRuleECondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEConditionRule()); }
	iv_ruleECondition=ruleECondition
	{ $current=$iv_ruleECondition.current; }
	EOF;

// Rule ECondition
ruleECondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='And'
			{
				newLeafNode(otherlv_0, grammarAccess.getEConditionAccess().getAndKeyword_0_0());
			}
			    |
			otherlv_1='Or'
			{
				newLeafNode(otherlv_1, grammarAccess.getEConditionAccess().getOrKeyword_0_1());
			}
		)?
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getEConditionAccess().getLeftParenthesisKeyword_1());
			}
		)?
		(
			otherlv_3='Not'
			{
				newLeafNode(otherlv_3, grammarAccess.getEConditionAccess().getNotKeyword_2());
			}
		)?
		{
			newCompositeNode(grammarAccess.getEConditionAccess().getConditionParserRuleCall_3());
		}
		this_Condition_4=ruleCondition
		{
			$current = $this_Condition_4.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getEConditionAccess().getRightParenthesisKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getConditionAccess().getSimpleConditionParserRuleCall());
	}
	this_SimpleCondition_0=ruleSimpleCondition
	{
		$current = $this_SimpleCondition_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSimpleCondition
entryRuleSimpleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleConditionRule()); }
	iv_ruleSimpleCondition=ruleSimpleCondition
	{ $current=$iv_ruleSimpleCondition.current; }
	EOF;

// Rule SimpleCondition
ruleSimpleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleConditionAccess().getFlightConditionParserRuleCall_0());
		}
		this_FlightCondition_0=ruleFlightCondition
		{
			$current = $this_FlightCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleConditionAccess().getBookingConditionParserRuleCall_1());
		}
		this_BookingCondition_1=ruleBookingCondition
		{
			$current = $this_BookingCondition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleConditionAccess().getGuestConditionParserRuleCall_2());
		}
		this_GuestCondition_2=ruleGuestCondition
		{
			$current = $this_GuestCondition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleConditionAccess().getTripConditionParserRuleCall_3());
		}
		this_TripCondition_3=ruleTripCondition
		{
			$current = $this_TripCondition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleConditionAccess().getNotificationConditionParserRuleCall_4());
		}
		this_NotificationCondition_4=ruleNotificationCondition
		{
			$current = $this_NotificationCondition_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current.getText(); }
	EOF;

// Rule Operator
ruleOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_1());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_2());
		}
		    |
		kw='in'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getInKeyword_3());
		}
		    |
		kw='contain'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getContainKeyword_4());
		}
	)
;

// Entry rule entryRuleTripCondition
entryRuleTripCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTripConditionRule()); }
	iv_ruleTripCondition=ruleTripCondition
	{ $current=$iv_ruleTripCondition.current; }
	EOF;

// Rule TripCondition
ruleTripCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trip'
		{
			newLeafNode(otherlv_0, grammarAccess.getTripConditionAccess().getTripKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTripConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTripConditionAccess().getMethodTripPhraseCrossReference_1_0());
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getTripConditionAccess().getOperatorParserRuleCall_2_0());
			}
			ruleOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				{
					newCompositeNode(grammarAccess.getTripConditionAccess().getVALUEParserRuleCall_2_1_0());
				}
				ruleVALUE
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTripConditionAccess().getVALUESParserRuleCall_2_1_1());
				}
				ruleVALUES
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_5='and'
				{
					newLeafNode(otherlv_5, grammarAccess.getTripConditionAccess().getAndKeyword_3_0_0());
				}
				    |
				otherlv_6='or'
				{
					newLeafNode(otherlv_6, grammarAccess.getTripConditionAccess().getOrKeyword_3_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTripConditionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getTripConditionAccess().getMethodTripPhraseCrossReference_3_1_0());
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getTripConditionAccess().getOperatorParserRuleCall_3_2_0());
				}
				ruleOperator
				{
					afterParserOrEnumRuleCall();
				}
				(
					{
						newCompositeNode(grammarAccess.getTripConditionAccess().getVALUEParserRuleCall_3_2_1_0());
					}
					ruleVALUE
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTripConditionAccess().getVALUESParserRuleCall_3_2_1_1());
					}
					ruleVALUES
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleGuestCondition
entryRuleGuestCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuestConditionRule()); }
	iv_ruleGuestCondition=ruleGuestCondition
	{ $current=$iv_ruleGuestCondition.current; }
	EOF;

// Rule GuestCondition
ruleGuestCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='guest'
		{
			newLeafNode(otherlv_0, grammarAccess.getGuestConditionAccess().getGuestKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuestConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGuestConditionAccess().getMethodGuestPhraseCrossReference_1_0());
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getGuestConditionAccess().getOperatorParserRuleCall_2_0());
			}
			ruleOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				{
					newCompositeNode(grammarAccess.getGuestConditionAccess().getVALUEParserRuleCall_2_1_0());
				}
				ruleVALUE
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGuestConditionAccess().getVALUESParserRuleCall_2_1_1());
				}
				ruleVALUES
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_5='and'
				{
					newLeafNode(otherlv_5, grammarAccess.getGuestConditionAccess().getAndKeyword_3_0_0());
				}
				    |
				otherlv_6='or'
				{
					newLeafNode(otherlv_6, grammarAccess.getGuestConditionAccess().getOrKeyword_3_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGuestConditionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getGuestConditionAccess().getMethodGuestPhraseCrossReference_3_1_0());
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getGuestConditionAccess().getOperatorParserRuleCall_3_2_0());
				}
				ruleOperator
				{
					afterParserOrEnumRuleCall();
				}
				(
					{
						newCompositeNode(grammarAccess.getGuestConditionAccess().getVALUEParserRuleCall_3_2_1_0());
					}
					ruleVALUE
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getGuestConditionAccess().getVALUESParserRuleCall_3_2_1_1());
					}
					ruleVALUES
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleBookingCondition
entryRuleBookingCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBookingConditionRule()); }
	iv_ruleBookingCondition=ruleBookingCondition
	{ $current=$iv_ruleBookingCondition.current; }
	EOF;

// Rule BookingCondition
ruleBookingCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='booking'
		{
			newLeafNode(otherlv_0, grammarAccess.getBookingConditionAccess().getBookingKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBookingConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBookingConditionAccess().getMethodBookingPhraseCrossReference_1_0());
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getBookingConditionAccess().getOperatorParserRuleCall_2_0());
			}
			ruleOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				{
					newCompositeNode(grammarAccess.getBookingConditionAccess().getVALUEParserRuleCall_2_1_0());
				}
				ruleVALUE
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getBookingConditionAccess().getVALUESParserRuleCall_2_1_1());
				}
				ruleVALUES
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_5='and'
				{
					newLeafNode(otherlv_5, grammarAccess.getBookingConditionAccess().getAndKeyword_3_0_0());
				}
				    |
				otherlv_6='or'
				{
					newLeafNode(otherlv_6, grammarAccess.getBookingConditionAccess().getOrKeyword_3_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBookingConditionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getBookingConditionAccess().getMethodBookingPhraseCrossReference_3_1_0());
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getBookingConditionAccess().getOperatorParserRuleCall_3_2_0());
				}
				ruleOperator
				{
					afterParserOrEnumRuleCall();
				}
				(
					{
						newCompositeNode(grammarAccess.getBookingConditionAccess().getVALUEParserRuleCall_3_2_1_0());
					}
					ruleVALUE
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBookingConditionAccess().getVALUESParserRuleCall_3_2_1_1());
					}
					ruleVALUES
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleFlightCondition
entryRuleFlightCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlightConditionRule()); }
	iv_ruleFlightCondition=ruleFlightCondition
	{ $current=$iv_ruleFlightCondition.current; }
	EOF;

// Rule FlightCondition
ruleFlightCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flight'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlightConditionAccess().getFlightKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getFlightConditionAccess().getMethodFlightPhraseCrossReference_1_0());
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getFlightConditionAccess().getOperatorParserRuleCall_2_0());
			}
			ruleOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				{
					newCompositeNode(grammarAccess.getFlightConditionAccess().getVALUEParserRuleCall_2_1_0());
				}
				ruleVALUE
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getFlightConditionAccess().getVALUESParserRuleCall_2_1_1());
				}
				ruleVALUES
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_5='and'
				{
					newLeafNode(otherlv_5, grammarAccess.getFlightConditionAccess().getAndKeyword_3_0_0());
				}
				    |
				otherlv_6='or'
				{
					newLeafNode(otherlv_6, grammarAccess.getFlightConditionAccess().getOrKeyword_3_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlightConditionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getFlightConditionAccess().getMethodFlightPhraseCrossReference_3_1_0());
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getFlightConditionAccess().getOperatorParserRuleCall_3_2_0());
				}
				ruleOperator
				{
					afterParserOrEnumRuleCall();
				}
				(
					{
						newCompositeNode(grammarAccess.getFlightConditionAccess().getVALUEParserRuleCall_3_2_1_0());
					}
					ruleVALUE
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getFlightConditionAccess().getVALUESParserRuleCall_3_2_1_1());
					}
					ruleVALUES
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleNotificationCondition
entryRuleNotificationCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotificationConditionRule()); }
	iv_ruleNotificationCondition=ruleNotificationCondition
	{ $current=$iv_ruleNotificationCondition.current; }
	EOF;

// Rule NotificationCondition
ruleNotificationCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='notification'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotificationConditionAccess().getNotificationKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNotificationConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getNotificationConditionAccess().getMethodNotificationPhraseCrossReference_1_0());
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getNotificationConditionAccess().getOperatorParserRuleCall_2_0());
			}
			ruleOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				{
					newCompositeNode(grammarAccess.getNotificationConditionAccess().getVALUEParserRuleCall_2_1_0());
				}
				ruleVALUE
				{
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getNotificationConditionAccess().getVALUESParserRuleCall_2_1_1());
				}
				ruleVALUES
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				otherlv_5='and'
				{
					newLeafNode(otherlv_5, grammarAccess.getNotificationConditionAccess().getAndKeyword_3_0_0());
				}
				    |
				otherlv_6='or'
				{
					newLeafNode(otherlv_6, grammarAccess.getNotificationConditionAccess().getOrKeyword_3_0_1());
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNotificationConditionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getNotificationConditionAccess().getMethodNotificationPhraseCrossReference_3_1_0());
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getNotificationConditionAccess().getOperatorParserRuleCall_3_2_0());
				}
				ruleOperator
				{
					afterParserOrEnumRuleCall();
				}
				(
					{
						newCompositeNode(grammarAccess.getNotificationConditionAccess().getVALUEParserRuleCall_3_2_1_0());
					}
					ruleVALUE
					{
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getNotificationConditionAccess().getVALUESParserRuleCall_3_2_1_1());
					}
					ruleVALUES
					{
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getENotificationActionParserRuleCall_0());
		}
		this_ENotificationAction_0=ruleENotificationAction
		{
			$current = $this_ENotificationAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getEFlightActionParserRuleCall_1());
		}
		this_EFlightAction_1=ruleEFlightAction
		{
			$current = $this_EFlightAction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getEBookingActionParserRuleCall_2());
		}
		this_EBookingAction_2=ruleEBookingAction
		{
			$current = $this_EBookingAction_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getEGuestActionParserRuleCall_3());
		}
		this_EGuestAction_3=ruleEGuestAction
		{
			$current = $this_EGuestAction_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getETripActionParserRuleCall_4());
		}
		this_ETripAction_4=ruleETripAction
		{
			$current = $this_ETripAction_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleENotificationAction
entryRuleENotificationAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getENotificationActionRule()); }
	iv_ruleENotificationAction=ruleENotificationAction
	{ $current=$iv_ruleENotificationAction.current; }
	EOF;

// Rule ENotificationAction
ruleENotificationAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='notification'
		{
			newLeafNode(otherlv_0, grammarAccess.getENotificationActionAccess().getNotificationKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getENotificationActionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getENotificationActionAccess().getMethodNotificationActionCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getENotificationActionAccess().getParamVALUEParserRuleCall_2_0_0());
					}
					lv_param_2_1=ruleVALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getENotificationActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_1,
							"poc.rules.RuleLanguage.VALUE");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getENotificationActionAccess().getParamVALUESParserRuleCall_2_0_1());
					}
					lv_param_2_2=ruleVALUES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getENotificationActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_2,
							"poc.rules.RuleLanguage.VALUES");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getENotificationActionAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getENotificationActionRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getENotificationActionAccess().getMethodNotificationActionCrossReference_3_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getENotificationActionAccess().getParamVALUEParserRuleCall_3_2_0_0());
						}
						lv_param_5_1=ruleVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getENotificationActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_1,
								"poc.rules.RuleLanguage.VALUE");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getENotificationActionAccess().getParamVALUESParserRuleCall_3_2_0_1());
						}
						lv_param_5_2=ruleVALUES
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getENotificationActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_2,
								"poc.rules.RuleLanguage.VALUES");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)*
	)
;

// Entry rule entryRuleEFlightAction
entryRuleEFlightAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEFlightActionRule()); }
	iv_ruleEFlightAction=ruleEFlightAction
	{ $current=$iv_ruleEFlightAction.current; }
	EOF;

// Rule EFlightAction
ruleEFlightAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flight'
		{
			newLeafNode(otherlv_0, grammarAccess.getEFlightActionAccess().getFlightKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEFlightActionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getEFlightActionAccess().getMethodFlightActionCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEFlightActionAccess().getParamVALUEParserRuleCall_2_0_0());
					}
					lv_param_2_1=ruleVALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEFlightActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_1,
							"poc.rules.RuleLanguage.VALUE");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEFlightActionAccess().getParamVALUESParserRuleCall_2_0_1());
					}
					lv_param_2_2=ruleVALUES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEFlightActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_2,
							"poc.rules.RuleLanguage.VALUES");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getEFlightActionAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEFlightActionRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEFlightActionAccess().getMethodFlightActionCrossReference_3_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEFlightActionAccess().getParamVALUEParserRuleCall_3_2_0_0());
						}
						lv_param_5_1=ruleVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEFlightActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_1,
								"poc.rules.RuleLanguage.VALUE");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getEFlightActionAccess().getParamVALUESParserRuleCall_3_2_0_1());
						}
						lv_param_5_2=ruleVALUES
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEFlightActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_2,
								"poc.rules.RuleLanguage.VALUES");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)*
	)
;

// Entry rule entryRuleEBookingAction
entryRuleEBookingAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEBookingActionRule()); }
	iv_ruleEBookingAction=ruleEBookingAction
	{ $current=$iv_ruleEBookingAction.current; }
	EOF;

// Rule EBookingAction
ruleEBookingAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='booking'
		{
			newLeafNode(otherlv_0, grammarAccess.getEBookingActionAccess().getBookingKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEBookingActionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getEBookingActionAccess().getMethodBookingActionCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEBookingActionAccess().getParamVALUEParserRuleCall_2_0_0());
					}
					lv_param_2_1=ruleVALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEBookingActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_1,
							"poc.rules.RuleLanguage.VALUE");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEBookingActionAccess().getParamVALUESParserRuleCall_2_0_1());
					}
					lv_param_2_2=ruleVALUES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEBookingActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_2,
							"poc.rules.RuleLanguage.VALUES");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getEBookingActionAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEBookingActionRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEBookingActionAccess().getMethodBookingActionCrossReference_3_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEBookingActionAccess().getParamVALUEParserRuleCall_3_2_0_0());
						}
						lv_param_5_1=ruleVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEBookingActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_1,
								"poc.rules.RuleLanguage.VALUE");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getEBookingActionAccess().getParamVALUESParserRuleCall_3_2_0_1());
						}
						lv_param_5_2=ruleVALUES
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEBookingActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_2,
								"poc.rules.RuleLanguage.VALUES");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)*
	)
;

// Entry rule entryRuleEGuestAction
entryRuleEGuestAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEGuestActionRule()); }
	iv_ruleEGuestAction=ruleEGuestAction
	{ $current=$iv_ruleEGuestAction.current; }
	EOF;

// Rule EGuestAction
ruleEGuestAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='guest'
		{
			newLeafNode(otherlv_0, grammarAccess.getEGuestActionAccess().getGuestKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEGuestActionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getEGuestActionAccess().getMethodGuestActionCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEGuestActionAccess().getParamVALUEParserRuleCall_2_0_0());
					}
					lv_param_2_1=ruleVALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEGuestActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_1,
							"poc.rules.RuleLanguage.VALUE");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEGuestActionAccess().getParamVALUESParserRuleCall_2_0_1());
					}
					lv_param_2_2=ruleVALUES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEGuestActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_2,
							"poc.rules.RuleLanguage.VALUES");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getEGuestActionAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEGuestActionRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEGuestActionAccess().getMethodGuestActionCrossReference_3_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEGuestActionAccess().getParamVALUEParserRuleCall_3_2_0_0());
						}
						lv_param_5_1=ruleVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEGuestActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_1,
								"poc.rules.RuleLanguage.VALUE");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getEGuestActionAccess().getParamVALUESParserRuleCall_3_2_0_1());
						}
						lv_param_5_2=ruleVALUES
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEGuestActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_2,
								"poc.rules.RuleLanguage.VALUES");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)*
	)
;

// Entry rule entryRuleETripAction
entryRuleETripAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getETripActionRule()); }
	iv_ruleETripAction=ruleETripAction
	{ $current=$iv_ruleETripAction.current; }
	EOF;

// Rule ETripAction
ruleETripAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trip'
		{
			newLeafNode(otherlv_0, grammarAccess.getETripActionAccess().getTripKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getETripActionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getETripActionAccess().getMethodTripActionCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getETripActionAccess().getParamVALUEParserRuleCall_2_0_0());
					}
					lv_param_2_1=ruleVALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getETripActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_1,
							"poc.rules.RuleLanguage.VALUE");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getETripActionAccess().getParamVALUESParserRuleCall_2_0_1());
					}
					lv_param_2_2=ruleVALUES
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getETripActionRule());
						}
						add(
							$current,
							"param",
							lv_param_2_2,
							"poc.rules.RuleLanguage.VALUES");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getETripActionAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getETripActionRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getETripActionAccess().getMethodTripActionCrossReference_3_1_0());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getETripActionAccess().getParamVALUEParserRuleCall_3_2_0_0());
						}
						lv_param_5_1=ruleVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getETripActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_1,
								"poc.rules.RuleLanguage.VALUE");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getETripActionAccess().getParamVALUESParserRuleCall_3_2_0_1());
						}
						lv_param_5_2=ruleVALUES
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getETripActionRule());
							}
							add(
								$current,
								"param",
								lv_param_5_2,
								"poc.rules.RuleLanguage.VALUES");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)*
	)
;

// Entry rule entryRuleVALUES
entryRuleVALUES returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALUESRule()); }
	iv_ruleVALUES=ruleVALUES
	{ $current=$iv_ruleVALUES.current.getText(); }
	EOF;

// Rule VALUES
ruleVALUES returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUESAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getVALUESAccess().getVALUEParserRuleCall_1());
		}
		this_VALUE_1=ruleVALUE
		{
			$current.merge(this_VALUE_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVALUESAccess().getCommaKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getVALUESAccess().getVALUEParserRuleCall_2_1());
			}
			this_VALUE_3=ruleVALUE
			{
				$current.merge(this_VALUE_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUESAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleVALUE
entryRuleVALUE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALUERule()); }
	iv_ruleVALUE=ruleVALUE
	{ $current=$iv_ruleVALUE.current.getText(); }
	EOF;

// Rule VALUE
ruleVALUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVALUEAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getVALUEAccess().getSTRINGTerminalRuleCall_1());
		}
		    |
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUEAccess().getTrueKeyword_2());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVALUEAccess().getFalseKeyword_3());
		}
	)
;

// Entry rule entryRuleDecisionTable
entryRuleDecisionTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionTableRule()); }
	iv_ruleDecisionTable=ruleDecisionTable
	{ $current=$iv_ruleDecisionTable.current; }
	EOF;

// Rule DecisionTable
ruleDecisionTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Table'
		{
			newLeafNode(otherlv_0, grammarAccess.getDecisionTableAccess().getTableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDecisionTableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecisionTableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getDecisionTableAccess().getColonKeyword_2_0());
			}
			(
				(
					lv_description_3_0=RULE_STRING
					{
						newLeafNode(lv_description_3_0, grammarAccess.getDecisionTableAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDecisionTableRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_4='|'
		{
			newLeafNode(otherlv_4, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDecisionTableAccess().getConditionsSimpleConditionParserRuleCall_4_0());
				}
				lv_conditions_5_0=ruleSimpleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDecisionTableRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_5_0,
						"poc.rules.RuleLanguage.SimpleCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='|'
			{
				newLeafNode(otherlv_6, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionTableAccess().getConditionsSimpleConditionParserRuleCall_5_1_0());
					}
					lv_conditions_7_0=ruleSimpleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionTableRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_7_0,
							"poc.rules.RuleLanguage.SimpleCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='|'
		{
			newLeafNode(otherlv_8, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDecisionTableAccess().getActionsActionParserRuleCall_7_0());
				}
				lv_actions_9_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDecisionTableRule());
					}
					add(
						$current,
						"actions",
						lv_actions_9_0,
						"poc.rules.RuleLanguage.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='|'
		{
			newLeafNode(otherlv_10, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_8());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionTableAccess().getActionsActionParserRuleCall_9_0_0());
					}
					lv_actions_11_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionTableRule());
						}
						add(
							$current,
							"actions",
							lv_actions_11_0,
							"poc.rules.RuleLanguage.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12='|'
			{
				newLeafNode(otherlv_12, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_9_1());
			}
		)*
		(
			otherlv_13='|'
			{
				newLeafNode(otherlv_13, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionTableAccess().getCellsVALUEParserRuleCall_10_1_0());
					}
					lv_cells_14_0=ruleVALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionTableRule());
						}
						add(
							$current,
							"cells",
							lv_cells_14_0,
							"poc.rules.RuleLanguage.VALUE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15='|'
			{
				newLeafNode(otherlv_15, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_10_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDecisionTableAccess().getCellsVALUEParserRuleCall_10_3_0_0());
						}
						lv_cells_16_0=ruleVALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDecisionTableRule());
							}
							add(
								$current,
								"cells",
								lv_cells_16_0,
								"poc.rules.RuleLanguage.VALUE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_17='|'
				{
					newLeafNode(otherlv_17, grammarAccess.getDecisionTableAccess().getVerticalLineKeyword_10_3_1());
				}
			)*
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
